{
  "type": "object",
  "$schema": "http://json-schema.org/draft-04/schema",
  "id": "http://jsonschema.net",
  "$ref": "http://localhost/plugins/content/component/model.schema",
  "globals": {
    "ariaRegion": {
      "type": "string",
      "required": true,
      "default": "This component is a basic drag and drop question component. Once you have dragged all the items then select the submit button below",
      "inputType": "Text",
      "validators": []
    }
  },
  "properties": {
    "_supportedLayout": {
      "type": "string",
      "required": true,
      "enum": ["full-width", "half-width", "both"],
      "default": "half-width",
      "editorOnly": true
    },
    "instruction": {
      "type": "string",
      "required": false,
      "default": "",
      "inputType": "Text",
      "validators": [],
      "help": "This is the instruction text"
    },
    "_attempts": {
      "type":"number",
      "required":true,
      "default":1,
      "title": "Attempts",
      "inputType":"Number",
      "validators": ["required", "number"],
      "help": "How many attempts the learner is allowed"
    },
    "_shouldDisplayAttempts": {
      "type":"boolean",
      "required":false,
      "default": false,
      "title": "Display Attempts",
      "inputType": {"type": "Boolean", "options": [true, false]},
      "validators": [],
      "help": "Select 'true' to display the numbers of attempts left"
    },
    "_isRandom": {
      "type":"boolean",
      "required":false,
      "default": false,
      "title": "Randomised Items",
      "inputType": {"type": "Boolean", "options": [true, false]},
      "validators": [],
      "help": "If set to 'true', all items will be randomised"
    },
     "_canShowModelAnswer":  {
       "type":"boolean",
       "required":true,
       "default": true,
       "title": "Display Model Answer",
       "inputType": {"type": "Boolean", "options": [true, false]},
       "validators": [],
       "help": "Select 'true' to allow the user to view the 'model answer' should they answer the question incorrectly"
    },
    "_recordInteraction": {
      "type":"boolean",
      "required":false,
      "default": true,
      "title": "Record interaction",
      "inputType": {"type": "Boolean", "options": [true, false]},
      "validators": [],
      "help": "If set to 'true', the user's answer(s) will be recorded to cmi.interactions on the LMS (where supported)."
    },
    "_questionWeight": {
      "type":"number",
      "required":false,
      "default": 1,
      "title": "Question Weight",
      "inputType": "Number",
      "validators": ["number"],
      "help": "How much this question is worth"
    },
    "_defaultWidth": {
      "type":"number",
      "required":true,
      "default": 1,
      "title": "Default Width",
      "inputType": "Number",
      "validators": ["number", "required"],
      "help": "Default width of an item"
    },
    "_defaultHeight": {
      "type":"number",
      "required":true,
      "default": 1,
      "title": "Default Height",
      "inputType": "Number",
      "validators": ["number", "required"],
      "help": "Default height of an item"
    },
    "_shouldScale": {
      "type":"boolean",
      "required":false,
      "default": false,
      "title": "Should scale",
      "inputType": {"type": "Boolean", "options": [true, false]},
      "validators": [],
      "help": "Select 'true' to scale container based on number of draggable items it contains."
    },
    "_draggableItems": {
      "type":"array",
      "required":true,
      "title": "Draggable Items",
      "items": {
        "type":"object",
        "required":true,
        "properties":{
          "id": {
            "type":"string",
            "required": true,
            "default": "drag-",
            "title": "Draggable Item Id naming convention (ex. drag-01)",
            "inputType": "Text",
            "validators": ["required"],
            "help": "increase the number as you add more items (ex. drag-02) would be the next draggable item ID"
          },
          "title": {
            "type":"string",
            "required": false,
            "default": "",
            "title": "Draggable item display title",
            "inputType": "Text",
            "validators": [],
            "help": ""
          },
          "body": {
            "type":"string",
            "required": false,
            "default": "",
            "title": "Draggable item body text",
            "inputType": "TextArea",
            "validators": [],
            "help": "Optional text which will be rendered with the item body."
          },
          "_graphic": {
            "type": "object",
            "required": false,
            "title": "Graphic",
            "properties":{
              "alt": {
                "type": "string",
                "required": false,
                "default": "",
                "inputType": "Text",
                "validators": [],
                "help": "The alternative text for this image"
              },
              "src": {
                "type": "string",
                "required": false,
                "default": "",
                "inputType": "Asset:image",
                "validators": [],
                "help": "Optional image which will be rendered with the item body"
              }
            }
          }
        }
      }
    },
    "_droppableItems": {
      "type":"array",
      "required":true,
      "title": "Droppable Items",
      "items": {
        "type":"object",
        "required":true,
        "properties":{
          "id": {
            "type":"string",
            "required": false,
            "default": "drop-",
            "title": "Droppable Item Id naming convention (ex. drop-01)",
            "inputType": "Text",
            "validators": [],
            "help": "increase the number as you add more items (ex. drop-02) would be the next draggable item ID"
          },
          "title": {
            "type":"string",
            "required": false,
            "default": "",
            "title": "Droppable item display title",
            "inputType": "Text",
            "validators": [],
            "help": ""
          },
          "body": {
            "type":"string",
            "required": true,
            "default": "",
            "title": "Body text that goes inside the droppable area",
            "inputType": "TextArea",
            "validators": ["required"],
            "help": "Optional text which will be rendered with the item body."
          },
          "_graphic": {
            "type": "object",
            "required": false,
            "title": "Graphic",
            "properties":{
              "alt": {
                "type": "string",
                "required": false,
                "default": "",
                "inputType": "Text",
                "validators": [],
                "help": "The alternative text for this image"
              },
              "src": {
                "type": "string",
                "required": false,
                "default": "",
                "inputType": "Asset:image",
                "validators": [],
                "help": "Optional image which will be rendered with the item body"
              }
            }
          },
          "correctItemId": {
            "type":"string",
            "required": false,
            "default": "drag-",
            "title": "This should match up with the correct Draggable item to go in the drop area (ex. enter 'drag-01' if correct)",
            "inputType": "Text",
            "validators": [],
            "help": "(ex. enter 'drag-01' if correct)"
          }
        }
      }
    },
    "_feedback": {
      "type":"object",
      "required":true,
      "title": "Feedback",
      "properties":{
        "correct": {
          "type":"string",
          "required":true,
          "default": "",
          "title": "Correct",
          "inputType": "TextArea",
          "validators": ["required"],
          "help": "Correct feedback for this question"
        },
        "_incorrect": {
          "type":"object",
          "required":true,
          "title": "Incorrect Feedback",
          "properties":{
            "final": {
              "type":"string",
              "required": true,
              "default": "",
              "title": "Incorrect Final",
              "inputType": "TextArea",
              "validators": ["required"],
              "help": "Incorrect feedback for the final attempt"
            },
            "notFinal": {
              "type":"string",
              "required": false,
              "default": "",
              "title": "Incorrect Not Final",
              "inputType": "TextArea",
              "validators": [],
              "help": "Incorrect feedback for any attempt apart from the last attempt"
            }
          }
        },
        "_partlyCorrect": {
          "type":"object",
          "required":false,
          "properties":{
            "final": {
              "type":"string",
              "required": false,
              "default": "",
              "title": "Partly Correct Final",
              "inputType": "TextArea",
              "validators": [],
              "help": "Partly correct feedback for the final attempt"
            },
            "notFinal": {
              "type":"string",
              "required": false,
              "default": "",
              "title": "Partly Correct Not Final",
              "inputType": "TextArea",
              "validators": [],
              "help": "Partly correct feedback for any attempt apart from the last attempt"
            }
          }
        }
      }
    },
    "_buttons": {
      "type":"object",
      "title": "Buttons",
      "required": false,
      "properties":{
        "_submit": {
          "type":"object",
          "title": "Submit",
          "properties":{
            "buttonText": {
              "type":"string",
              "required": false,
              "default": "",
              "title": "",
              "inputType": "QuestionButton",
              "validators": [],
              "help": "Button label text for the submit button"
            },
            "ariaLabel": {
              "type":"string",
              "required": false,
              "default": "",
              "title": "",
              "inputType": "Text",
              "validators": [],
              "help": "Aria label for the submit button"
            }
          }
        },
        "_reset": {
          "type":"object",
          "title": "Reset",
          "properties":{
            "buttonText": {
              "type":"string",
              "required": false,
              "default": "",
              "title": "",
              "inputType": "QuestionButton",
              "validators": [],
              "help": "Button label text for the reset button"
            },
            "ariaLabel": {
              "type":"string",
              "required": false,
              "default": "",
              "title": "",
              "inputType": "Text",
              "validators": [],
              "help": "Aria label for the reset button"
            }
          }
        },
        "_showCorrectAnswer": {
          "type":"object",
          "title": "Show Correct Answer",
          "properties":{
            "buttonText": {
              "type":"string",
              "required": false,
              "default": "",
              "title": "",
              "inputType": "QuestionButton",
              "validators": [],
              "help": "Button label text to show the model answer"
            },
            "ariaLabel": {
              "type":"string",
              "required": false,
              "default": "",
              "title": "",
              "inputType": "Text",
              "validators": [],
              "help": "Aria label for the show model answer button"
            }
          }
        },
        "_hideCorrectAnswer": {
          "type":"object",
          "title": "Hide Correct Answer",
          "properties":{
            "buttonText": {
              "type":"string",
              "required": false,
              "default": "",
              "title": "",
              "inputType": "QuestionButton",
              "validators": [],
              "help": "Button label text to hide the model answer"
            },
            "ariaLabel": {
              "type":"string",
              "required": false,
              "default": "",
              "title": "",
              "inputType": "Text",
              "validators": [],
              "help": "Aria label for the hide model answer button"
            }
          }
        },
        "_showFeedback": {
          "type":"object",
          "title": "Show Feedback",
          "properties":{
            "buttonText": {
              "type":"string",
              "required": false,
              "default": "",
              "title": "",
              "inputType": "QuestionButton",
              "validators": [],
              "help": "Button label text to show feedback"
            },
            "ariaLabel": {
              "type":"string",
              "required": false,
              "default": "",
              "title": "",
              "inputType": "Text",
              "validators": [],
              "help": "Aria label for the show feedback button"
            }
          }
        },
        "remainingAttemptsText": {
          "type":"string",
          "required": false,
          "default": "",
          "title": "Attempts Remaining Text",
          "inputType": "Text",
          "validators": [],
          "help": "Shown when there are multiple attempts left"
        },
        "remainingAttemptText": {
          "type":"string",
          "required": false,
          "default": "",
          "title": "Final Attempt Text",
          "inputType": "Text",
          "validators": [],
          "help": "Shown when there is one attempt left"
        }
      }
    }
  }
}
